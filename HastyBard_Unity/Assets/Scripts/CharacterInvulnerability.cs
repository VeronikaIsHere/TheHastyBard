using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CharacterInvulnerability : MonoBehaviour
{
    public float invulnerabilityDuration = 5f;
    public float blinkingDuration = 2f;
    public float blinkingInterval = 0.1f;
    private bool isInvulnerable = false;
    private float invulnerabilityTimer = 0f;
    private GameObject barrier;
    private Coroutine blinkingCoroutine;

    private void Start()
    {
        barrier = transform.Find("Barrier").gameObject;
        SetBarrierVisibility(false);
    }

    public void StartInvulnerability()
    {
        isInvulnerable = true;
        invulnerabilityTimer = invulnerabilityDuration;
        SetBarrierVisibility(true);

        if (blinkingCoroutine != null)
        {
            StopCoroutine(blinkingCoroutine);
        }
        blinkingCoroutine = StartCoroutine(BlinkingCoroutine());
    }

    public bool IsInvulnerable()
    {
        return isInvulnerable;
    }

    private void Update()
    {
        if (isInvulnerable)
        {
            invulnerabilityTimer -= Time.deltaTime;

            if (invulnerabilityTimer <= 0f)
            {
                isInvulnerable = false;
                SetBarrierVisibility(false);

                if (blinkingCoroutine != null)
                {
                    StopCoroutine(blinkingCoroutine);
                    blinkingCoroutine = null;
                }
            }
        }
    }

    private void SetBarrierVisibility(bool isVisible)
    {
        if (barrier != null)
        {
            barrier.SetActive(isVisible);
        }
    }

    private IEnumerator BlinkingCoroutine()
    {
        float timer = 0f;
        bool isVisible = true;

        // Wait for the specified duration before starting the rapid blinking
        yield return new WaitForSeconds(invulnerabilityDuration - blinkingDuration);

        while (timer < blinkingDuration)
        {
            SetBarrierVisibility(isVisible);
            yield return new WaitForSeconds(blinkingInterval);

            timer += blinkingInterval;
            isVisible = !isVisible;
        }

        // Make sure the barrier is visible at the end of blinking
        SetBarrierVisibility(true);
    }
}
